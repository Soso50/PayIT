<Window x:Class="PayIT.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PayIT"
       xmlns:materialDesign="http://materaldesigninxaml.net/winfx/xaml/themes"
         xmlns:wpfx="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit/extended"
        mc:Ignorable="d"
        Title="Dashboard" Height="768" Width="1360" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" FontFamily="Articulate" Loaded="CmbStudentFullName_Onloaded">
    <!--#region Main Tab Control-->

    <Window.Resources>
        <ImageBrush x:Key="Tutor_Inverse" ImageSource="/Icons_Images/Add Tutor Inverse New.png" Stretch="Fill"/>
        <ImageBrush x:Key="Course_Inverse" ImageSource="/Icons_Images/Add Course Inverse New.png" Stretch="Fill"/>
        <ImageBrush x:Key="Student_Inverse" ImageSource="/Icons_Images/Add Student Inverse New.png" Stretch="Fill"/>
        <ImageBrush x:Key="Generate_Invoice_Inverse" ImageSource="/Icons_Images/Generate_invoice_inverse.png" Stretch="Fill"/>
        <ImageBrush x:Key="Attach_Invoice_Inverse" ImageSource="/Icons_Images/Attach_invoice_inverse.png" Stretch="Fill"/>
        <ImageBrush x:Key="Export_Inverse" ImageSource="/Icons_Images/Export_inverse.png" Stretch="Fill"/>

        <!--#region FocusVisual-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <!--#endregion-->

        <!--#region Tutor Style for Inverse Button-->
        <Style x:Key="TutorStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Tutor_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Tutor_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Course Style for INverse Button-->
        <Style x:Key="CourseStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Course_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Course_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Student Style for INverse Button-->
        <Style x:Key="StudentStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Student_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Student_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Generate Invoice Style for Inverse Button-->
        <Style x:Key="GenerateInvoiceStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Generate_Invoice_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Generate_Invoice_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Attach Invoice Style for Inverse Button-->
        <Style x:Key="AttachInvoiceStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Attach_Invoice_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Attach_Invoice_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Attach Invoice Style for Inverse Button-->
        <Style x:Key="ExportInvoiceStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Export_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Export_Inverse}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->


    </Window.Resources>

    <TabControl>

        <!--#region Invoice Main Tab-->
        <TabItem x:Name="tabInvoice" ToolTip="Invoice">
            <TabItem.Header>
                <Image Source="/Icons_Images/Invoice.png" Height="30" Width="30"/>
            </TabItem.Header>
            <!--Invoice Contents-->
            <StackPanel Orientation="Vertical" Background="White">
                <StackPanel>
                    <TextBlock Text="INVOICE" FontSize="24" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,15,0,0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <StackPanel Height="580">

                        <Button  x:Name="btnInvoice" Margin="10,20,10,0" VerticalAlignment="Top" Width="80" Height="110" Click="btnInvoice_Click" BorderBrush="{x:Null}" Foreground="{x:Null}" ToolTip="Generate Invoice" Style="{DynamicResource GenerateInvoiceStyle}">
                            <Button.Background>
                                <ImageBrush ImageSource="/Icons_Images/Generate_invoice.png" Stretch="Fill"/>
                            </Button.Background>
                        </Button>

                        <Button x:Name="btnAttach" Content="Attach Invoice" HorizontalAlignment="Left" Margin="10,30,10,0" VerticalAlignment="Top" Width="80" Height="120" Click="btnAttach_Click" BorderBrush="{x:Null}" Foreground="{x:Null}" ToolTip="Attach Invoice" Style="{DynamicResource AttachInvoiceStyle}">
                            <Button.Background>
                                <ImageBrush ImageSource="/Icons_Images/Attach_invoice.png" Stretch="Fill"/>
                            </Button.Background>
                        </Button>

                        <Button x:Name="btnEportDB" Content="Export Income" HorizontalAlignment="Left" Margin="10,30,10,0" VerticalAlignment="Top" Width="80" Height="120" Click="btnEportDB_Click" BorderBrush="{x:Null}" Foreground="{x:Null}" ToolTip="Export Income" Style="{DynamicResource ExportInvoiceStyle}">
                            <Button.Background>
                                <ImageBrush ImageSource="/Icons_Images/Export.png" Stretch="Fill"/>
                            </Button.Background>
                        </Button>
                    </StackPanel>
                    <StackPanel Height="580">
                        <StackPanel Orientation="Horizontal">

                            <TextBlock Text="Search by Student" Height="15" Margin="30,0,0,8" VerticalAlignment="Bottom" FontWeight="Bold" FontSize="14"/>
                            <ComboBox x:Name="cmbStudentName" ItemsSource="{Binding IsAsync=True, Mode=Default}" SelectedValuePath="StudentID" DisplayMemberPath="StudentName" HorizontalAlignment="Left" Margin="20,20,0,0" VerticalAlignment="Top" Width="237" IsEditable="True" Height="30" />
                            <RadioButton x:Name="rbSearchDate" Content="Start Date"  VerticalAlignment="Bottom" Margin="40,0,0,8" FontFamily="Articulate" Checked="rbSearchDate_Checked" Height="15" FontWeight="Bold" FontSize="14"/>
                            <wpfx:DateTimePicker x:Name="dpStartDate" Height="30" Width="257" Margin="20,20,0,0" VerticalAlignment="Top" IsEditable="True"/>
                            <Label x:Name="rbSearchDate_Copy" Content="End Date"  VerticalAlignment="Bottom" Margin="40,0,0,8" FontFamily="Articulate"  Height="24" FontWeight="Bold" FontSize="14" RenderTransformOrigin="0.522,-0.4"/>
                            <wpfx:DateTimePicker x:Name="dpEndDate" Height="30" Width="256" Margin="20,20,0,0" VerticalAlignment="Top" IsEditable="True" RenderTransformOrigin="0.634,0.083"/>

                        </StackPanel>
                        <TextBlock Height="20" HorizontalAlignment="Center" IsEnabled="False"/>
                        <Grid Width="1172" Margin="10,0,0,0">




                            <ListView x:Name="dataGrid"  Height="310" Margin="10,20,0,0.4" VerticalAlignment="Top" Width="auto" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto" Background="{x:Null}" BorderBrush="{x:Null}" Grid.ColumnSpan="3" FontFamily="Articulate">
                                <ListView.View>

                                    <GridView>
                                        <GridViewColumn Header="Student" DisplayMemberBinding="{Binding Student}" Width="150"/>
                                        <GridViewColumn Header="Grade" DisplayMemberBinding="{Binding Grade}" Width="150"/>
                                        <GridViewColumn Header="Email Address" DisplayMemberBinding="{Binding Email}" Width="250"/>
                                        <GridViewColumn Header="Course Name" DisplayMemberBinding="{Binding Course}" Width="200"/>
                                        <GridViewColumn Header="Course Rate" DisplayMemberBinding="{Binding CourseRateString}" Width="100"/>
                                        <GridViewColumn Header="Total Hours" DisplayMemberBinding="{Binding Hours}" Width="80"/>
                                        <GridViewColumn Header="Attended Date" DisplayMemberBinding="{Binding Slot}" Width="300"/>


                                    </GridView>
                                </ListView.View>

                            </ListView>

                        </Grid>
                    </StackPanel>
                </StackPanel>
                <StackPanel Background="LightGray">
                    <Image Source="/lowkeyitai_aQF_icon.ico" Height="50" Margin="10,10,0,10" HorizontalAlignment="Left"/>
                </StackPanel>

            </StackPanel>

        </TabItem>
        <!--#endregion-->

        <!--#region Attendance Main Tab-->
        <TabItem x:Name="tabAttendance" ToolTip="Attendance">
            <TabItem.Header>
                <Image Source="/Icons_Images/Attendance.png" Height="30" Width="30"/>
            </TabItem.Header>
            <Grid>



                <TabControl Margin="5,0,0,0.4" Background="DarkRed" Grid.ColumnSpan="2">
                    <TabItem ToolTip="Add Attendance">
                        <TabItem.Header>
                            <Image Source="/Icons_Images/Add-Redesign.png" Height="30" Width="30"/>
                        </TabItem.Header>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Margin="30,30,30,30" Orientation="Vertical" Height="530" Background="LightGray" Width="440">
                                    <Label Content="ADD ATTENDANCE" Width="300" FontSize="22" HorizontalAlignment="Center" HorizontalContentAlignment="Center" Margin="100,15,100,0" IsEnabled="False" FontWeight="Bold"/>
                                    <Label Content="STUDENT" Width="130" Height="30" FontSize="14" HorizontalContentAlignment="Center" FontWeight="Bold" Margin="86,20,84,0"/>
                                    <ComboBox x:Name="cmbAddStudent" IsEditable="True" ItemsSource="{Binding IsAsync=True, Mode=OneWay}" SelectedValuePath="StudentID" DisplayMemberPath="Fullname" Height="30" Width="300"/>
                                    <TextBlock Width="300" Height="15" IsEnabled="False"/>
                                    <Label Content="COURSE" Width="130" Height="30" FontSize="14" HorizontalContentAlignment="Center" FontWeight="Bold" Margin="86,0,84,0"/>
                                    <ComboBox x:Name="cmbAddCourse" IsEditable="True" ItemsSource="{Binding IsAsync=True, Mode=OneWay}" SelectedValuePath="CourseNo" DisplayMemberPath="Course" Height="30" Width="300" Cursor="Pen"/>
                                    <TextBlock Width="300" IsEnabled="False"/>
                                    <Label Content="NUMBER OF HOURS" Height="30" FontSize="14" HorizontalContentAlignment="Center" FontWeight="Bold" Margin="92,0,89,0"/>
                                    <wpfx:DoubleUpDown x:Name="txtNumberOfHours" Minimum="1" DefaultValue="1" Height="30" Width="50" Margin="126,0,124,0"/>

                                    <TextBlock Width="300" IsEnabled="False"/>

                                    <Label Content="GROUP" Height="30" FontSize="14" HorizontalContentAlignment="Center" FontWeight="Bold" Margin="92,0,89,0"/>
                                    <wpfx:DoubleUpDown x:Name="rbGroup" Minimum="1" Maximum="14" DefaultValue="1" Height="30" Width="50" Margin="126,0,124,0"/>


                                    <TextBlock Width="300" IsEnabled="False"/>
                                    <Label Width="130" Height="30" FontSize="14" HorizontalContentAlignment="Center" FontWeight="Bold" Content="TIME SLOT" Margin="86,0,84,0"/>
                                    <wpfx:DateTimePicker x:Name="dpTimeSlot" Height="30" Width="300" />
                                    <TextBlock Height="30" Width="300" IsEnabled="False"/>
                                    <Button x:Name="btnAddAttendance"  Content="ADD ATTENDANCE" Click="btnAddAttendance_Click" Height="50" Background="DarkRed" Foreground="White" FontWeight="Bold" FontSize="20" Margin="10,0" Width="300" />
                                    <!--Must have the icon image.-->

                                </StackPanel>
                                <DataGrid x:Name="dgTotalAttendance" ItemsSource="{Binding}" AlternatingRowBackground="#4C800000" FontSize="14" ColumnWidth="Auto" HorizontalAlignment="Left" Width="810" Height="530" Margin="0,30" />
                                <!--<TextBox Name="txtNumberOfHours" />-->

                            </StackPanel>
                            <StackPanel Background="LightGray">
                                <Image Source="/lowkeyitai_aQF_icon.ico" Height="40" Margin="10,10,0,10" HorizontalAlignment="Left"/>
                            </StackPanel>
                        </StackPanel>
                    </TabItem>

                    <TabItem ToolTip="Update Attendance">
                        <TabItem.Header>

                            <Image Source="/Icons_Images/Update-Redesign.png" Height="30" Width="30"/>

                        </TabItem.Header>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Margin="30,30,30,30" Orientation="Vertical" Height="530" Background="LightGray" Width="440">
                                    <Label Content="UPDATE ATTENDANCE" Width="300" FontSize="22" HorizontalAlignment="Center" HorizontalContentAlignment="Center" Margin="100,15,100,0" IsEnabled="False" FontWeight="Bold"/>
                                    <Label Content="STUDENT" Width="130" Height="30" FontSize="14" HorizontalContentAlignment="Center" FontWeight="Bold" Margin="86,20,84,0"/>
                                    <TextBox Name="cmbUpdateStudentFullName" IsReadOnly="True" Height="30" Width="300"/>
                                    <TextBlock Width="300" Height="15" IsEnabled="False"/>
                                    <Label Content="COURSE" Width="130" Height="30" FontSize="14" HorizontalContentAlignment="Center" FontWeight="Bold" Margin="86,0,84,0"/>
                                    <ComboBox Name="cmbUpdateCourseName" IsEditable="True" ItemsSource="{Binding IsAsync=True, Mode=OneWay}" SelectedValuePath="CourseNo" DisplayMemberPath="Course" Height="30" Width="300"/>
                                    <TextBlock Width="300" IsEnabled="False"/>
                                    <Label Content="NUMBER OF HOURS" Height="30" FontSize="14" HorizontalContentAlignment="Center" FontWeight="Bold" Margin="92,0,89,0"/>
                                    <wpfx:DoubleUpDown Name="txtNoOfHours" Minimum="1" DefaultValue="1" Height="30" Width="50"/>
                                    <TextBlock Width="300" IsEnabled="False"/>

                                    <Label Content="GROUP" Height="30" FontSize="14" HorizontalContentAlignment="Center" FontWeight="Bold" Margin="92,0,89,0"/>
                                    <wpfx:DoubleUpDown x:Name="rbGroupSession" Minimum="1" Maximum="14" DefaultValue="1" Height="30" Width="50" Margin="126,0,124,0"/>

                                    <TextBlock Width="300" IsEnabled="False"/>
                                    <Label Width="130" Height="30" FontSize="14" HorizontalContentAlignment="Center" FontWeight="Bold" Content="TIME SLOT" Margin="86,0,84,0"/>
                                    <wpfx:DateTimePicker x:Name="dpSlot" Height="30" Width="300"/>
                                    <TextBlock Height="30" Width="300" IsEnabled="False"/>
                                    <Button  Content="UPDATE ATTENDANCE" x:Name="btnEditAttendace" Click="btnEditAttendace_Click" Height="50" Background="DarkRed" Foreground="White" FontWeight="Bold" FontSize="20" Margin="10,0" Width="300" />
                                    <!--Must have the icon image.-->
                                </StackPanel>
                                <DataGrid x:Name="dgTotalUpdateAttendance" ItemsSource="{Binding}" AlternatingRowBackground="#4C800000" FontSize="14" ColumnWidth="Auto" HorizontalAlignment="Left" Width="810" Height="530" Margin="0,30" SelectionChanged="dgTotalUpdateAttendance_Selected" />

                            </StackPanel>
                            <StackPanel Background="LightGray">
                                <Image Source="/lowkeyitai_aQF_icon.ico" Height="40" Margin="10,10,0,10" HorizontalAlignment="Left"/>
                            </StackPanel>
                        </StackPanel>


                    </TabItem>

                    <TabItem ToolTip="Delete Attendance">
                        <TabItem.Header>
                            <Image Source="/Icons_Images/Delete.png" Height="30" Width="30"/>
                        </TabItem.Header>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Margin="30,30,30,30" Orientation="Vertical" Height="530" Background="LightGray" Width="440">
                                    <Label Content="DELETE ATTENDANCE" Width="300" FontSize="22" HorizontalAlignment="Center" HorizontalContentAlignment="Center" Margin="100,15,100,0" IsEnabled="False" FontWeight="Bold"/>
                                    <Label Content="STUDENT" Width="130" Height="30" FontSize="14" HorizontalContentAlignment="Center" FontWeight="Bold" Margin="86,20,84,0"/>
                                    <TextBox Name="cmbDeleteStudentFullName" SpellCheck.IsEnabled="True" Height="30" Width="300"/>
                                    <TextBlock Width="300" Height="15" IsEnabled="False"/>

                                    <Button  Content="DELETE ATTENDANCE" x:Name="btnDeleteAttendace" Click="btnDeleteAttendance_Click" Height="50" Background="DarkRed" Foreground="White" FontWeight="Bold" FontSize="20" Margin="10,0" Width="300" />
                                    <TextBlock Width="300" Height="15" IsEnabled="False"/>

                                    <!--Must have the icon image.-->
                                </StackPanel>
                                <DataGrid x:Name="dgTotalDeleteAttendance" ItemsSource="{Binding}" AlternatingRowBackground="#4C800000" FontSize="14" ColumnWidth="Auto" HorizontalAlignment="Left" Width="810" Height="530" Margin="0,30" SelectionChanged="dgTotalDeleteAttendance_SelectionChanged"/>

                            </StackPanel>
                            <StackPanel Background="LightGray">
                                <Image Source="/lowkeyitai_aQF_icon.ico" Height="40" Margin="10,10,0,10" HorizontalAlignment="Left"/>
                            </StackPanel>
                        </StackPanel>


                    </TabItem>
                </TabControl>
                <!--<DataGrid x:Name="dgTotalAttendance" ItemsSource="{Binding}" HeadersVisibility="Column" AlternatingRowBackground="#4C800000" FontSize="14" ColumnWidth="Auto" Margin="572,56,0,30" HorizontalAlignment="Left" Width="753" />-->

            </Grid>
        </TabItem>
        <!--#endregion-->

        <!--#region Manage Main Tab-->
        <TabItem x:Name="tabManage" ToolTip="Management">
            <TabItem.Header>
                <Image Source="/Icons_Images/Management.png" Height="30" Width="30"/>
            </TabItem.Header>

            <Grid>

                <!--Frame to view the pages.-->
                <Frame x:Name="frmManage" HorizontalAlignment="Right" Width="1195" NavigationUIVisibility="Hidden"/>

                <!--#region Stackpanel containing side buttons.-->
                <StackPanel Margin="0,0,1200,0">

                    <Button x:Name="btnTutor" Height="80" FontSize="16" FontWeight="Bold" Cursor="Hand" Margin="30,20,30,0" Click="btnTutor_Click" BorderBrush="{x:Null}" Foreground="{x:Null}" ToolTip="Tutor/User" Style="{DynamicResource TutorStyle}">
                        <Button.Background>
                            <ImageBrush ImageSource="/Icons_Images/Add tutor.png" Stretch="Fill"/>
                            <!--Needs a Tutor icon.-->
                        </Button.Background>
                    </Button>

                    <Button x:Name="btnCourse" Height="80" FontSize="16" FontWeight="Bold" Cursor="Hand" Margin="30,40,30,0" Click="btnCourse_Click" BorderBrush="{x:Null}" Foreground="{x:Null}" ToolTip="Course" Style="{DynamicResource CourseStyle}">
                        <Button.Background>
                            <ImageBrush ImageSource="Icons_Images/Add courses.png" Stretch="Fill"/>
                            <!--Needs a course icon, like a book or something.-->
                        </Button.Background>
                    </Button>

                    <Button x:Name="btnStudent" Height="65" FontSize="16" FontWeight="Bold" Cursor="Hand" Margin="30,40,30,0" Click="btnStudent_Click" BorderBrush="{x:Null}" Foreground="{x:Null}" ToolTip="Student" Style="{DynamicResource StudentStyle}">
                        <Button.Background>
                            <ImageBrush ImageSource="Images/Icon/Student.png" Stretch="Fill"/>
                            <!--Needs a student hat as an Icon.-->
                        </Button.Background>
                    </Button>
                </StackPanel>

                <!--#endregion-->

            </Grid>

        </TabItem>
        <!--#endregion-->

    </TabControl>

    <!--#endregion-->
</Window>
